#!/bin/python
""" Use this to rename my BSPWM workspaces to icons
"""

import re
import subprocess

icons_dict = {
    "alacritty": str(""),
    "firefox": str(""),
    "mpv": str(""),
}

# Edit this with info from bspc query --desktops
desktops_dict = {
    "\^1.local": "1",
    "\^2.local": "2",
    "\^3.local": "3",
    "\^4.local": "4",
    "\^5.local": "5",
    "\^6.local": "6",
    "\^7.local": "7",
    "\^8.local": "8",
    "\^9.local": "9",
    "\^10.local": "10",
}


def check_desktop_classes(desktop):
    """checks what windows are open on a desktop and adds them to a list"""
    my_cmd = f"bspc query --tree --desktop {desktop}"
    items = []
    raw_output = subprocess.Popen(
        [my_cmd], stdout=subprocess.PIPE, shell=True
    ).communicate()
    raw_output = str(raw_output)
    regexed_output = re.findall('"className":".*?"', raw_output)
    for item in regexed_output:
        # keep only text after :" and before "
        items.append(re.findall(':"(.*)"', item)[0])
    return items


def create_desktop_name(desktop):
    """Loops over list of applications, and turns it into a string of icons"""
    desktop_name = ""
    output = check_desktop_classes(desktop)
    desktop_name += f"{desktops_dict[desktop]}"
    for item in output:
        if item in icons_dict:
            desktop_name += f" {icons_dict[item]}"
        else:
            desktop_name += " ^"

    return desktop_name


def set_desktop_name(desktop):
    """Runs bspc coommand to change desktop name"""
    desktop_name = create_desktop_name(desktop)
    my_cmd = f'bspc desktop {desktop} --rename "{desktop_name}"'
    subprocess.call([my_cmd], shell=True)


def rename_all_desktops():
    """TODO: Find a way to import names automatically
    Loops over desktops and renames all"""
    desktop_list = [
        "\^1.local",
        "\^2.local",
        "\^3.local",
        "\^4.local",
        "\^5.local",
        "\^6.local",
        "\^7.local",
        "\^8.local",
        "\^9.local",
        "\^10.local",
    ]
    for desktop in desktop_list:
        set_desktop_name(desktop)


if __name__ == "__main__":
    rename_all_desktops()
